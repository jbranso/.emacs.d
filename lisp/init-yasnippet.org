* yasnippet
** Set up yasnippet.
#+BEGIN_SRC emacs-lisp
  (use-package yasnippet
    :defer t
    :ensure t)

    (add-to-list 'load-path "~/.emacs.d/snippets")
    (require 'yasnippet)
    (yas-global-mode 1)

#+END_SRC

If I modify a buffer via a yasnippet with a back-ticks like ~`SOME ELISP CODE `~, then yasnippet will issue a warning.  Let's tell yasnippet to ignore that.

#+BEGIN_SRC emacs-lisp
  (with-eval-after-load 'warnings
    (add-to-list 'warning-suppress-types '(yasnippet backquote-change)))
#+END_SRC
** COMMENT using yasnippet with evil-mode
This advises yasnippet, so that when I expand a snippet, I change to insert state and leave in insert state.

But it is probably not necessary.  When I am about to expand a snippet, I am typically in insert state anyway.
#+BEGIN_SRC emacs-lisp
  (when evil-mode
    (advice-add 'evil-insert-state :before 'yas-expand)
    (advice-add 'evil-insert-state :after 'yas-expand))

#+END_SRC

** provide this file

#+BEGIN_SRC emacs-lisp
(provide 'init-yasnippet)
#+END_SRC
