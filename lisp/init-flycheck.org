#+BEGIN_SRC emacs-lisp
  (cond ((string-equal system-type "darwin"))
        (setq flyspell-program "hunspell"))
  (require 'ispell)

#+END_SRC

* Install official flycheck packages
** Show errors in a popup
Show flycheck packages in a nice pop-up.
#+BEGIN_SRC emacs-lisp
(use-package flycheck-pos-tip :ensure t :defer t)
#+END_SRC
** show cute emojis
#+BEGIN_SRC emacs-lisp
(use-package flycheck-status-emoji :ensure t)
#+END_SRC

** Color the modeline when flycheck finds an error
Color the mode line if flycheck spots a syntax error.
#+BEGIN_SRC emacs-lisp
(use-package flycheck-color-mode-line :ensure t)
#+END_SRC



;; (eval-after-load 'flycheck
;;   '(flycheck-package-setup))


;; (setq flycheck-display-errors-function #'flycheck-display-error-messages-unless-error-list))

* The flycheck use package declaration
#+BEGIN_SRC emacs-lisp
  (use-package flycheck :defer t :ensure t)

    (eval-after-load "flycheck"
      '(add-hook 'flycheck-mode-hook 'flycheck-color-mode-line-mode))
    (with-eval-after-load 'flycheck
      (flycheck-pos-tip-mode))
    (with-eval-after-load 'flycheck
      (flycheck-status-emoji-mode))
    (add-hook 'after-init-hook 'global-flycheck-mode)

#+END_SRC

* Provide this file

#+BEGIN_SRC emacs-lisp
(provide 'init-flycheck)
#+END_SRC
;;; init-flycheck ends here
